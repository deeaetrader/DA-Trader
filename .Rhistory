} else if(x < 2020){
x <- 5
}
return(x)
}
NSDQmth$decade_code <- as.factor(sapply(NSDQmth$year, decadecode))
NSDQmth
# Creating a new object that has the %changes compared to previous November
# Step1: Create a dataframe with only closing price of each November
octclose <- NSDQmth %>%
filter(month == 10) %>%
select(Close, year) %>%
rename(octclose = Close)
# Create a new column for studyyear which starts in November
octclose$studyyear <- seq(1,49,1)
# Step2: Calculating %change for each month since previous November
# Note: All months in 1971 before November are discarded as no prior November to reference from
delta1 <- NSDQmth[, c(2,4,5,7)] %>%
filter(month %in% c(1:6,10:12))
NSDQmth
# Creating a data frame with closing prices and date
library(dplyr)
library(lubridate)
library(tibble)
NSDQ <- rownames_to_column(as.data.frame(IXIC), var = "date") %>%
mutate(date = ymd(date)) %>%
select(date, IXIC.Close, IXIC.Volume) %>%
rename(Close = IXIC.Close,
Volume = IXIC.Volume)
NSDQ
# Creating a data frame consisting weeks and their closing prices
NSDQmth <- NSDQ %>%
mutate(month = as.integer(month(date)),
year = year(date)) %>%
group_by(year, month) %>%
filter(date == max(date))
# Using "lag" to create weekly percentage closing prices
NSDQmth$lag <- lag(NSDQmth$Close)
NSDQmth <- NSDQmth %>%
mutate(perc_close = (Close - lag)/Close * 100) %>%
na.omit() %>%
select(-lag)
NSDQmth
# Creating a new column called "decade"
decade <- function(x){
if(x < 1980){
x <- "1970-1979"
} else if(x < 1990){
x <- "1980-1989"
} else if(x < 2000){
x <- "1990-1999"
} else if(x < 2010){
x <- "2000-2009"
} else if(x < 2020){
x <- "2010-2019"
}
return(x)
}
NSDQmth$decade <- as.factor(sapply(NSDQmth$year, decade))
decadecode <- function(x){
if(x < 1980){
x <- 1
} else if(x < 1990){
x <- 2
} else if(x < 2000){
x <- 3
} else if(x < 2010){
x <- 4
} else if(x < 2020){
x <- 5
}
return(x)
}
NSDQmth$decade_code <- as.factor(sapply(NSDQmth$year, decadecode))
NSDQmth
# Creating a new object that has the %changes compared to previous November
# Step1: Create a dataframe with only closing price of each November
octclose <- NSDQmth %>%
filter(month == 10) %>%
select(Close, year) %>%
rename(octclose = Close)
# Create a new column for studyyear which starts in November
octclose$studyyear <- seq(1,49,1)
# Step2: Calculating %change for each month since previous November
# Note: All months in 1971 before November are discarded as no prior November to reference from
delta1 <- NSDQmth[, c(2,4,5,7)] %>%
filter(month %in% c(1:6,10:12))
# Creating a similar column of studyyear
deltayear <- delta1[-c(1:4,437:439),]
deltayear$studyyear <- rep(1:48, each = 9)
deltayear$studymth <- rep(seq(0,8,1),48)
NSDQ8best <- deltayear %>%
inner_join(octclose, by = "studyyear") %>%
mutate(delta_perc = (Close - octclose)/Close * 100) %>%
select(c(2:6, 10)) %>%
rename(month = month.x,
year = year.x) %>%
ungroup() %>%
mutate_at(c("month", "year", "studyyear", "studymth"), as.factor)
NSDQ8best
NSDQ8best %>%
filter(studymth != 0) %>%
ggplot(aes(x = studymth, y = year, fill = delta_perc))+
geom_tile()+
scale_fill_gradient2(low = "red", high = "green4", mid = "white", midpoint = 0)+
theme_minimal()+
scale_x_discrete(labels = c("Nov","Dec","Jan","Feb","Mar","Apr","May","Jun"))+
theme(axis.text.y = element_text(size = 8))+
labs(x = "Month",
title = "Heatmap of Nasdaq changes compared to end of Oct",
caption = "Red signifies percentage change for that week lower than end of May",
fill = "% change")
NSDQ8best %>%
filter(studymth != 0) %>%
ggplot(aes(x = studymth, y = year, fill = delta_perc))+
geom_tile()+
scale_fill_gradient2(low = "red", high = "green4", mid = "white", midpoint = 0)+
theme_minimal()+
scale_x_discrete(labels = c("Nov","Dec","Jan","Feb","Mar","Apr","May","Jun"))+
theme(axis.text.y = element_text(size = 6))+
labs(x = "Month",
title = "Heatmap of Nasdaq changes compared to end of Oct",
caption = "Red signifies percentage change for that week lower than end of May",
fill = "% change")
NSDQ8best
NSDQ8best %>%
filter(studymth != 0) %>%
ggplot(aes(x = studymth, y = year, fill = delta_perc))+
geom_tile()+
scale_fill_gradient2(low = "red", high = "green4", mid = "white", midpoint = 0)+
theme_minimal()+
scale_x_discrete(labels = c("Nov","Dec","Jan","Feb","Mar","Apr","May","Jun"))+
scale_y_discrete(breaks = year[c(T,F)])+
labs(x = "Month",
title = "Heatmap of Nasdaq changes compared to end of Oct",
caption = "Red signifies percentage change for that week lower than end of May",
fill = "% change")
NSDQ8best %>%
filter(studymth != 0) %>%
ggplot(aes(x = studymth, y = year, fill = delta_perc))+
geom_tile()+
scale_fill_gradient2(low = "red", high = "green4", mid = "white", midpoint = 0)+
theme_minimal()+
scale_x_discrete(labels = c("Nov","Dec","Jan","Feb","Mar","Apr","May","Jun"))+
scale_y_discrete(breaks = year[c(T,F,F)])+
labs(x = "Month",
title = "Heatmap of Nasdaq changes compared to end of Oct",
caption = "Red signifies percentage change for that week lower than end of May",
fill = "% change")
# Heatmap
library(ggplot2)
NSDQ8best %>%
filter(studymth != 0) %>%
ggplot(aes(x = studymth, y = year, fill = delta_perc))+
geom_tile()+
scale_fill_gradient2(low = "red", high = "green4", mid = "white", midpoint = 0)+
theme_minimal()+
scale_x_discrete(labels = c("Nov","Dec","Jan","Feb","Mar","Apr","May","Jun"))+
# scale_y_discrete(breaks = c())+
labs(x = "Month",
title = "Heatmap of Nasdaq changes compared to end of Oct",
caption = "Red signifies percentage change for that week lower than end of May",
fill = "% change")
# Heatmap
library(ggplot2)
NSDQ8best %>%
filter(studymth != 0) %>%
ggplot(aes(x = studymth, y = year, fill = delta_perc))+
geom_tile()+
scale_fill_gradient2(low = "red", high = "green4", mid = "white", midpoint = 0)+
theme_minimal()+
scale_x_discrete(labels = c("Nov","Dec","Jan","Feb","Mar","Apr","May","Jun"))+
scale_y_discrete(breaks = c("1971","2019"))+
labs(x = "Month",
title = "Heatmap of Nasdaq changes compared to end of Oct",
caption = "Red signifies percentage change for that week lower than end of May",
fill = "% change")
NSDQ8best %>%
filter(studymth != 0) %>%
ggplot(aes(x = studymth, y = year, fill = delta_perc))+
geom_tile()+
scale_fill_gradient2(low = "red", high = "green4", mid = "white", midpoint = 0)+
theme_minimal()+
scale_x_discrete(labels = c("Nov","Dec","Jan","Feb","Mar","Apr","May","Jun"))+
scale_y_discrete(breaks = c(seq(1971, 2019, 5)))+
labs(x = "Month",
title = "Heatmap of Nasdaq changes compared to end of Oct",
caption = "Red signifies percentage change for that week lower than end of May",
fill = "% change")
NSDQ8best %>%
filter(studymth != 0) %>%
ggplot(aes(x = studymth, y = year, fill = delta_perc))+
geom_tile()+
scale_fill_gradient2(low = "red", high = "green4", mid = "white", midpoint = 0)+
theme_minimal()+
scale_x_discrete(labels = c("Nov","Dec","Jan","Feb","Mar","Apr","May","Jun"))+
scale_y_discrete(breaks = c(seq(1971, 2019, 3)))+
labs(x = "Month",
title = "Heatmap of Nasdaq changes compared to end of Oct",
caption = "Red signifies percentage change for that week lower than end of May",
fill = "% change")
# Faceted Heat Map
NSDQ8best %>%
filter(studymth != 0) %>%
ggplot(aes(x = studymth, y = year, fill = delta_perc))+
geom_tile()+
scale_fill_gradient2(low = "red", high = "green4", mid = "white", midpoint = 0)+
theme_minimal()+
scale_x_discrete(labels = c("Nov","Dec","Jan","Feb","Mar","Apr","May","Jun"))+
theme(axis.text.y = element_blank())+
labs(x = "Month",
y = "Year",
title = "Heatmap of Nasdaq changes compared to end of Oct",
caption = "Red signifies percentage change for that week lower than end of May",
fill = "% change")+
facet_wrap(~ decade, ncol = 1, scale = "free_y")
# Line plot
library(plotly)
ggplotly(
NSDQ8best %>%
ggplot(aes(x = as.integer(studymth), y = delta_perc))+
geom_line(aes(color = year), show.legend = F)+
geom_hline(yintercept = 0)+
theme_minimal()+
labs(x = "Month starting from End Oct",
y = "% change from End of Oct",
title = "%change from End of Oct to Jun by Year")
)
# Aggregate %change by month
NSDQmthagg <- NSDQmth %>%
mutate(up = perc_close > 0,
down = perc_close < 0) %>%
group_by(month) %>%
summarize(mean = mean(perc_close),
median = median(perc_close),
up_occur = sum(up),
down_occur = sum(down)) %>%
mutate(mean_up = mean > 0,
median_up = median > 0)
# Column plot MEAN
NSDQmthagg %>%
ggplot(aes(x = month, y = mean, fill = mean_up)) +
annotate(xmin = 5.5, xmax = 10.5, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.2)+
geom_col()+
theme_minimal()+
scale_x_continuous(breaks = c(1:12))+
scale_fill_manual(values = c("red", "green4"))+
labs(y = "Mean % change",
title = "MEAN % change for each month 1971 - 2019",
fill = "% change")
# Column plot proportion
library(tidyr)
NSDQmthagg %>%
select(month, up_occur, down_occur) %>%
gather(-month, key = "up_down", value = "occur") %>%
ggplot(aes(x = month, y = occur, fill = up_down))+
geom_col(position = "fill")+
annotate(xmin = 6.5, xmax = 10.5, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.2, color = "black")+
geom_hline(yintercept = 0.5)+
theme_minimal()+
scale_fill_manual(values = c("red", "green4"))+
scale_x_continuous(breaks = c(1:12))+
labs(y = "Ratio of Up vs Down weeks",
title = "Proportion of Up vs Down weeks 1971 - 2019",
fill = "")
# Column plot MEDIAN
NSDQmthagg %>%
ggplot(aes(x = month, y = median, fill = median_up)) +
annotate(xmin = 6.5, xmax = 10.5, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.2)+
geom_col()+
theme_minimal()+
scale_fill_manual(values = c("green4", "red"))+
scale_x_continuous(breaks = c(1:12))+
labs(y = "Median % change",
title = "MEDIAN % change for each month 1971 - 2019",
fill = "% change")
# Column plot MEAN
NSDQmthagg %>%
ggplot(aes(x = month, y = mean, fill = mean_up)) +
annotate(xmin = 6.5, xmax = 10.5, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.2)+
geom_col()+
theme_minimal()+
scale_x_continuous(breaks = c(1:12))+
scale_fill_manual(values = c("red", "green4"))+
labs(y = "Mean % change",
title = "MEAN % change for each month 1971 - 2019",
fill = "% change")
portfoliomth
bnh
bnh49
bnh49$BnH
c("All", bnh49$BnH)
data.frame(c("All", bnh49$BnH))
data.frame("All", bnh49$BnH)
porfoliomth %>% rbind(data.frame("All", bnh49$BnH))
portfoliomth <- data.frame("start_month" = c(1:12), "buy_n_hold" = bnh49$BnH, "window_gains" = exe1) %>%
mutate(gains = buy_n_hold - window_gains) %>%
select(1,4)
porfoliomth %>% rbind(data.frame("All", bnh49$BnH))
portfoliomth %>% rbind(data.frame("All", bnh49$BnH))
portfoliomth %>% rbind(data.frame("All", bnh49$BnH)[1])
portfoliomth %>% rbind(data.frame("All", bnh49$BnH)[1,])
portfoliomth
portfoliomth %>% rbind(data.frame("start_month" = "All", gains = bnh49$BnH))
portfoliomth %>%
rbind(data.frame("start_month" = "All", gains = bnh49$BnH)) %>%
ggplot(aes(x = as.factor(start_month), y = gains, fill = gains))+
geom_col()+
theme_minimal()+
scale_fill_gradient(low = "grey", high = "green4")+
geom_hline(aes(yintercept = max(gains)), linetype = "dashed")+
labs(x = "Four month exclusion window beginning end of month",
y = "Cumulative Portfolio gains",
title = "Portfolio Gains if 4-month window excluded beginning end of month X",
caption = "Cumulative portfolio from 1979 to 2019")
portfoliomth
geom_hline(aes(yintercept = gains[6], linetype = "dashed")+
portfoliomth %>%
rbind(data.frame("start_month" = "All", gains = bnh49$BnH)) %>%
ggplot(aes(x = as.factor(start_month), y = gains, fill = gains))+
geom_col()+
theme_minimal()+
scale_fill_gradient(low = "grey", high = "green4")+
geom_hline(aes(yintercept = gains[6], linetype = "dashed"))+
labs(x = "Four month exclusion window beginning end of month",
y = "Cumulative Portfolio gains",
title = "Portfolio Gains if 4-month window excluded beginning end of month X",
caption = "Cumulative portfolio from 1979 to 2019")
portfoliomth %>%
portfoliomth %>%
rbind(data.frame("start_month" = "All", gains = bnh49$BnH)) %>%
ggplot(aes(x = as.factor(start_month), y = gains, fill = gains))+
geom_col()+
theme_minimal()+
scale_fill_gradient(low = "grey", high = "green4")+
geom_hline(aes(yintercept = gains[6], linetype = "dashed"))+
labs(x = "Four month exclusion window beginning end of month",
y = "Cumulative Portfolio gains",
title = "Portfolio Gains if 4-month window excluded beginning end of month X",
caption = "Cumulative portfolio from 1979 to 2019")
portfoliomth %>%
rbind(data.frame("start_month" = "All", gains = bnh49$BnH)) %>%
ggplot(aes(x = as.factor(start_month), y = gains, fill = gains))+
geom_col()+
theme_minimal()+
scale_fill_gradient(low = "grey", high = "green4")+
geom_hline(aes(yintercept = gains[6]), linetype = "dashed")+
labs(x = "Four month exclusion window beginning end of month",
y = "Cumulative Portfolio gains",
title = "Portfolio Gains if 4-month window excluded beginning end of month X",
caption = "Cumulative portfolio from 1979 to 2019")
# Study by looking at full year
NSDQmth %>%
ggplot(aes(x = as.factor(month), y = perc_close))+
annotate(xmin = 5.5, xmax = 10.5, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.2)+
geom_boxplot(color = "blue")+
geom_hline(yintercept = 0)+
theme_minimal()+
scale_x_discrete(labels = c("Jan","Feb","Mar","Apr","May","Jun", "Jul", "Aug", "Sep", "Oct", "Nov","Dec"))+
labs(x = "Month",
y = "% change from End of Nov",
title = "%change of every month")
knitr::opts_chunk$set(echo = TRUE)
library(quantmod)
getSymbols("^IXIC",
from = "1971-01-01",
to = "2019-12-31",
src = "yahoo")
head(IXIC, 20)
# Creating a data frame with closing prices and date
library(dplyr)
library(lubridate)
library(tibble)
NSDQ <- rownames_to_column(as.data.frame(IXIC), var = "date") %>%
mutate(date = ymd(date)) %>%
select(date, IXIC.Close, IXIC.Volume) %>%
rename(Close = IXIC.Close,
Volume = IXIC.Volume)
NSDQ
# Creating a data frame consisting weeks and their closing prices
NSDQmth <- NSDQ %>%
mutate(month = as.integer(month(date)),
year = year(date)) %>%
group_by(year, month) %>%
filter(date == max(date))
# Using "lag" to create weekly percentage closing prices
NSDQmth$lag <- lag(NSDQmth$Close)
NSDQmth <- NSDQmth %>%
mutate(perc_close = (Close - lag)/Close * 100) %>%
na.omit() %>%
select(-lag)
NSDQmth
# Creating a new column called "decade"
decade <- function(x){
if(x < 1980){
x <- "1970-1979"
} else if(x < 1990){
x <- "1980-1989"
} else if(x < 2000){
x <- "1990-1999"
} else if(x < 2010){
x <- "2000-2009"
} else if(x < 2020){
x <- "2010-2019"
}
return(x)
}
NSDQmth$decade <- as.factor(sapply(NSDQmth$year, decade))
decadecode <- function(x){
if(x < 1980){
x <- 1
} else if(x < 1990){
x <- 2
} else if(x < 2000){
x <- 3
} else if(x < 2010){
x <- 4
} else if(x < 2020){
x <- 5
}
return(x)
}
NSDQmth$decade_code <- as.factor(sapply(NSDQmth$year, decadecode))
NSDQmth
# Creating a new object that has the %changes compared to previous November
# Step1: Create a dataframe with only closing price of each November
octclose <- NSDQmth %>%
filter(month == 10) %>%
select(Close, year) %>%
rename(octclose = Close)
# Create a new column for studyyear which starts in November
octclose$studyyear <- seq(1,49,1)
# Step2: Calculating %change for each month since previous November
# Note: All months in 1971 before November are discarded as no prior November to reference from
delta1 <- NSDQmth[, c(2,4,5,7)] %>%
filter(month %in% c(1:6,10:12))
# Creating a similar column of studyyear
deltayear <- delta1[-c(1:4,437:439),]
deltayear$studyyear <- rep(1:48, each = 9)
deltayear$studymth <- rep(seq(0,8,1),48)
NSDQ8best <- deltayear %>%
inner_join(octclose, by = "studyyear") %>%
mutate(delta_perc = (Close - octclose)/Close * 100) %>%
select(c(2:6, 10)) %>%
rename(month = month.x,
year = year.x) %>%
ungroup() %>%
mutate_at(c("month", "year", "studyyear", "studymth"), as.factor)
NSDQ8best
# Heatmap
library(ggplot2)
NSDQ8best %>%
filter(studymth != 0) %>%
ggplot(aes(x = studymth, y = year, fill = delta_perc))+
geom_tile()+
scale_fill_gradient2(low = "red", high = "green4", mid = "white", midpoint = 0)+
theme_minimal()+
scale_x_discrete(labels = c("Nov","Dec","Jan","Feb","Mar","Apr","May","Jun"))+
scale_y_discrete(breaks = c(seq(1971, 2019, 3)))+
labs(x = "Month",
title = "Heatmap of Nasdaq changes compared to end of Oct",
caption = "Red signifies percentage change for that week lower than end of May",
fill = "% change")
# Faceted Heat Map
NSDQ8best %>%
filter(studymth != 0) %>%
ggplot(aes(x = studymth, y = year, fill = delta_perc))+
geom_tile()+
scale_fill_gradient2(low = "red", high = "green4", mid = "white", midpoint = 0)+
theme_minimal()+
scale_x_discrete(labels = c("Nov","Dec","Jan","Feb","Mar","Apr","May","Jun"))+
theme(axis.text.y = element_blank())+
labs(x = "Month",
y = "Year",
title = "Heatmap of Nasdaq changes compared to end of Oct",
caption = "Red signifies percentage change for that week lower than end of May",
fill = "% change")+
facet_wrap(~ decade, ncol = 1, scale = "free_y")
# Line plot
library(plotly)
ggplotly(
NSDQ8best %>%
ggplot(aes(x = as.integer(studymth), y = delta_perc))+
geom_line(aes(color = year), show.legend = F)+
geom_hline(yintercept = 0)+
theme_minimal()+
labs(x = "Month starting from End Oct",
y = "% change from End of Oct",
title = "%change from End of Oct to Jun by Year")
)
# Box plot
NSDQ8best %>%
filter(studymth != 0) %>%
ggplot(aes(x = studymth, y = delta_perc))+
geom_boxplot(color = "blue")+
geom_hline(yintercept = 0)+
theme_minimal()+
scale_x_discrete(labels = c("Nov","Dec","Jan","Feb","Mar","Apr","May","Jun"))+
labs(x = "Month starting from Nov",
y = "% change from End of Nov",
title = "%change from End of Nov to May by Year")
# Study by looking at full year
NSDQmth %>%
ggplot(aes(x = as.factor(month), y = perc_close))+
annotate(xmin = 5.5, xmax = 10.5, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.2)+
geom_boxplot(color = "blue")+
geom_hline(yintercept = 0)+
theme_minimal()+
scale_x_discrete(labels = c("Jan","Feb","Mar","Apr","May","Jun", "Jul", "Aug", "Sep", "Oct", "Nov","Dec"))+
labs(x = "Month",
y = "% change from End of Nov",
title = "%change of every month")
